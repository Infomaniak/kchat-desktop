name: release-kchat

on:
    push:
        branches: [feat/github-actions-settings]
        #tags:
        #    - "[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]"
        #    - "[0-9]+.[0-9]+.[0-9]+-beta.[0-9]"
jobs:
    build-mac-installer:
        runs-on: macos-latest
        steps:
            - name: release/checkout-repo
              uses: actions/checkout@v3
            - name: release/setup-node
              uses: actions/setup-node@v3
              with:
                  node-version-file: "package.json"
                  cache: "npm"
                  cache-dependency-path: package-lock.json
            - name: release/install-dependencies
              run: |
                  brew install yq rename
                  npm ci
            - name: release/test
              uses: ./.github/actions/test
            - name: release/build
              env:
                  APPLEID: ${{ secrets.APPLEID }}
                  APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
                  CSC_FOR_PULL_REQUEST: true
                  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                  CSC_LINK: ${{ secrets.CSC_LINK }}
              run: npm run package:mac

    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: release/checkout-repo
              uses: actions/checkout@v3
            - name: release/setup-node
              uses: actions/setup-node@v3
              with:
                  node-version-file: "package.json"
                  cache: "npm"
                  cache-dependency-path: package-lock.json
            - name: release/install-dependencies
              run: |
                  wget -qO - https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04/Release.key | sudo apt-key add -
                  wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
                  sudo apt-get update || true && sudo apt-get install -y ca-certificates libxtst-dev libpng++-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu jq icnsutils graphicsmagick tzdata
                  npm ci
            - name: release/test
              uses: ./.github/actions/test
            - name: release/build
              run: |
                  mkdir -p ./build/linux
                  npm run package:linux

    build-msi-installer:
        runs-on: windows-2022
        steps:
            - name: release/checkout-repo
            uses: actions/checkout@v3
            - name: release/setup-node
            uses: actions/setup-node@v3
            with:
                node-version: "16.16.0"
            - name: release/optimize
            shell: powershell
            run: ./scripts/Makefile.ps1 optimize
            - name: release/install-deps
            shell: powershell
            run: |
                ./scripts/Makefile.ps1 install-deps
                choco install yq --version 4.15.1 -y
                npm i -g node-gyp
                node-gyp install
                node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers"
                node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch arm64
                node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$(jq -r .devDependencies.electron package.json) --dist-url="https://electronjs.org/headers" --arch ia32
                npm ci --openssl_fips=''
            # - name: release/test
            #  uses: ./.github/actions/test
            - name: release/build
            run: |
                npm run package:windows-nsis
